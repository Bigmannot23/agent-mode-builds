name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  release:
    types: [published]

# Principle of least privilege by default; elevate per job
permissions: read-all

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PY_VERSIONS: '["3.10","3.11","3.12"]'  # easy toggle
  DOCS_DIR: docs

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
      - name: Install tools
        run: |
          pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install "ruff>=0.5" "black>=24.0" "mypy>=1.9"
      - name: Ruff
        run: ruff check .
      - name: Black (check)
        run: black --check .
      - name: MyPy
        run: mypy .

  test:
    name: Test (${{ matrix.python }})
    runs-on: ubuntu-latest
    needs: lint
    permissions: read-all
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(env.PY_VERSIONS) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python }} }
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            .pytest_cache
          key: pip-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/requirements*.txt') }}
      - name: Install deps
        run: |
          pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov
      - name: PyTest
        run: pytest -q --maxfail=1 --disable-warnings --cov=./ --cov-report=xml
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.python }}
          path: coverage.xml

  build_artifact:
    name: Build artifact
    runs-on: ubuntu-latest
    needs: test
    permissions: read-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build dist
        run: |
          pip install -U build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/**

  docker:
    name: Docker (GHCR)
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest
      - uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/analyze@v3

  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Trivy filesystem SCA
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy.sarif'
          ignore-unfixed: true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

  docs:
    name: Build & Deploy Docs
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install docs deps
        run: |
          if [ -f $DOCS_DIR/requirements.txt ]; then pip install -r $DOCS_DIR/requirements.txt; else pip install mkdocs mkdocs-material; fi
      - name: Build docs
        run: mkdocs build --strict
        working-directory: ${{ env.DOCS_DIR }}
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DOCS_DIR }}/site
      - id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build_artifact]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
          generate_release_notes: true

  automerge_dependabot:
    name: Auto-merge Dependabot
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          merge-method: squash
